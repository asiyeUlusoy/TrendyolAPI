<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="USER-Bilgisayar" ignored="0" name="Default test" tests="9" failures="0" timestamp="10 Mar 2019 18:09:30 GMT" time="0.628" errors="0">
  <testcase name="@BeforeClass setUp" time="0.104" classname="suites.bookstore.ApiTest">
    <failure type="java.lang.IllegalArgumentException" message="baseURI cannot be null">
      <![CDATA[java.lang.IllegalArgumentException: baseURI cannot be null
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:238)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
at io.restassured.internal.assertion.AssertParameter.notNull(AssertParameter.groovy:26)
at io.restassured.internal.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:197)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:217)
at io.restassured.internal.RequestSpecificationImpl.<init>(RequestSpecificationImpl.groovy:135)
at io.restassured.RestAssured.createTestSpecification(RestAssured.java:1510)
at io.restassured.RestAssured.given(RestAssured.java:711)
at suites.bookstore.ApiTest.setUp(ApiTest.java:28)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeClass setUp -->
  <testcase name="@BeforeMethod beforeTest" time="0.0" classname="suites.bookstore.ApiTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeTest -->
  <testcase name="@AfterMethod afterTest" time="0.0" classname="suites.bookstore.ApiTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterTest -->
  <testcase name="@BeforeMethod beforeTest" time="0.0" classname="suites.bookstore.ApiTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeTest -->
  <testcase name="@AfterMethod afterTest" time="0.0" classname="suites.bookstore.ApiTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterTest -->
  <testcase name="@BeforeMethod beforeTest" time="0.0" classname="suites.bookstore.ApiTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeTest -->
  <testcase name="@AfterMethod afterTest" time="0.0" classname="suites.bookstore.ApiTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterTest -->
  <testcase name="@BeforeMethod beforeTest" time="0.0" classname="suites.bookstore.ApiTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeTest -->
  <testcase name="@AfterMethod afterTest" time="0.0" classname="suites.bookstore.ApiTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterTest -->
  <testcase name="@BeforeMethod beforeTest" time="0.0" classname="suites.bookstore.ApiTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeTest -->
  <testcase name="@AfterMethod afterTest" time="0.0" classname="suites.bookstore.ApiTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterTest -->
  <testcase name="@BeforeMethod beforeTest" time="0.0" classname="suites.bookstore.ApiTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeTest -->
  <testcase name="@AfterMethod afterTest" time="0.0" classname="suites.bookstore.ApiTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterTest -->
  <testcase name="@BeforeMethod beforeTest" time="0.0" classname="suites.bookstore.ApiTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeTest -->
  <testcase name="@AfterMethod afterTest" time="0.0" classname="suites.bookstore.ApiTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterTest -->
  <testcase name="@BeforeMethod beforeTest" time="0.0" classname="suites.bookstore.ApiTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeTest -->
  <testcase name="@AfterMethod afterTest" time="0.0" classname="suites.bookstore.ApiTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterTest -->
  <testcase name="@BeforeMethod beforeTest" time="0.0" classname="suites.bookstore.ApiTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeTest -->
  <testcase name="@AfterMethod afterTest" time="0.0" classname="suites.bookstore.ApiTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterTest -->
  <testcase name="emptyAuthorFields" time="0.0" classname="suites.bookstore.ApiTest">
    <skipped/>
  </testcase> <!-- emptyAuthorFields -->
  <testcase name="emptyStore" time="0.0" classname="suites.bookstore.ApiTest">
    <skipped/>
  </testcase> <!-- emptyStore -->
  <testcase name="emptyTitleFields" time="0.0" classname="suites.bookstore.ApiTest">
    <skipped/>
  </testcase> <!-- emptyTitleFields -->
  <testcase name="getBookFound" time="0.0" classname="suites.bookstore.ApiTest">
    <skipped/>
  </testcase> <!-- getBookFound -->
  <testcase name="getBookNotFound" time="0.0" classname="suites.bookstore.ApiTest">
    <skipped/>
  </testcase> <!-- getBookNotFound -->
  <testcase name="putbooksDuplicate" time="0.0" classname="suites.bookstore.ApiTest">
    <skipped/>
  </testcase> <!-- putbooksDuplicate -->
  <testcase name="readOnlyId" time="0.0" classname="suites.bookstore.ApiTest">
    <skipped/>
  </testcase> <!-- readOnlyId -->
  <testcase name="requiredFieldAuthor" time="0.0" classname="suites.bookstore.ApiTest">
    <skipped/>
  </testcase> <!-- requiredFieldAuthor -->
  <testcase name="requiredFieldTitle" time="0.0" classname="suites.bookstore.ApiTest">
    <skipped/>
  </testcase> <!-- requiredFieldTitle -->
</testsuite> <!-- Default test -->
